service: audiomass-api # NOTE: update this with your service name

provider:
  name: aws
  runtime: dotnetcore1.0
  stage: dev # Set the default stage used. Default is dev
  region: us-east-1 # Overwrite the default region used. Default is us-east-1
  timeout: 30 # The default is 6

# you can define service wide environment variables here  
  environment:
    test: testValue

resources:  # CloudFormation template syntax
  Resources:
    spotlightEntriesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: SpotlightEntries
        AttributeDefinitions:
          - AttributeName: accountId
            AttributeType: S
        KeySchema:
          - AttributeName: accountId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    aritstEventEntriesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: SpotlightEntries
        AttributeDefinitions:
          - AttributeName: artistId
            AttributeType: S
        KeySchema:
          - AttributeName: artistId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
functions:
#user
  getUser:
    environment:
    handler: server::AudioMass.Handler.User.Handler::Get
    events:
      - http:
          path: settings
          method: get
          cors: true
  updateUser:
    environment:
    handler: server::AudioMass.Handler.User.Handler::Update
    events:
      - http:
          path: settings
          method: post
          cors: true
#spotlight
  getSpotlight:
    environment:
    handler: server::AudioMass.Handler.Spotlight.Handler::Get
    events:
      - http:
          path: spotlight
          method: get
          cors: true

plugins:
  - serverless-dotnet
